name: Generate Models and Format Code

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ACA-Py Version'
        required: true
        default: 'main'

env:
  POETRY_VERSION: 1.5.1

jobs:
  model-gen:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v5
      - name: Install poetry
        run: pipx install poetry==${{ env.POETRY_VERSION}}
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: poetry
      - name: Install dependencies
        run: poetry install

      - name: Run Generate Models Script
        run: ./scripts/generate-models.sh ${{ github.event.inputs.version }}

      - name: Run Black
        run: poetry run black controller/models.py

      - name: Check for Changes
        id: git-check
        run: |
          git diff
          if [ -n "$(git diff --name-only)" ]; then
            echo "::set-output name=changes::true"
          fi

      - name: Commit and Push if there are Changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git checkout -b chore/auto-models-${{ github.run_id }}
          git add controller/models.py
          git commit -sm "chore: regenerated models from ACA-Py ${{ github.event.inputs.version }}"
          git push origin chore/auto-models-${{ github.run_id }}

      - name: Create PR
        if: steps.git-check.outputs.changes == 'true'
        run: |
          gh pr create \
            --title "chore: regenerated models from ACA-Py ${{ github.event.inputs.version }}" \
            --body "This PR is auto-generated by GitHub Actions." \
            --base main \
            --head chore/auto-models-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
